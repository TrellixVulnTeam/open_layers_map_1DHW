{"id":"I4BI","dependencies":[{"name":"/Users/OKMG/Desktop/Work/open_layers_map/package.json","includedInParent":true,"mtime":1658712170300},{"name":"/Users/OKMG/Desktop/Work/open_layers_map/node_modules/ol/package.json","includedInParent":true,"mtime":1658712211657},{"name":"./Vector.js","loc":{"line":17,"column":24},"parent":"/Users/OKMG/Desktop/Work/open_layers_map/node_modules/ol/layer/Heatmap.js","resolved":"/Users/OKMG/Desktop/Work/open_layers_map/node_modules/ol/layer/Vector.js"},{"name":"../renderer/webgl/PointsLayer.js","loc":{"line":18,"column":37},"parent":"/Users/OKMG/Desktop/Work/open_layers_map/node_modules/ol/layer/Heatmap.js","resolved":"/Users/OKMG/Desktop/Work/open_layers_map/node_modules/ol/renderer/webgl/PointsLayer.js"},{"name":"../obj.js","loc":{"line":19,"column":23},"parent":"/Users/OKMG/Desktop/Work/open_layers_map/node_modules/ol/layer/Heatmap.js","resolved":"/Users/OKMG/Desktop/Work/open_layers_map/node_modules/ol/obj.js"},{"name":"../math.js","loc":{"line":20,"column":22},"parent":"/Users/OKMG/Desktop/Work/open_layers_map/node_modules/ol/layer/Heatmap.js","resolved":"/Users/OKMG/Desktop/Work/open_layers_map/node_modules/ol/math.js"},{"name":"../dom.js","loc":{"line":21,"column":38},"parent":"/Users/OKMG/Desktop/Work/open_layers_map/node_modules/ol/layer/Heatmap.js","resolved":"/Users/OKMG/Desktop/Work/open_layers_map/node_modules/ol/dom.js"},{"name":"../Object.js","loc":{"line":22,"column":35},"parent":"/Users/OKMG/Desktop/Work/open_layers_map/node_modules/ol/layer/Heatmap.js","resolved":"/Users/OKMG/Desktop/Work/open_layers_map/node_modules/ol/Object.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var t=a(require(\"./Vector.js\")),e=a(require(\"../renderer/webgl/PointsLayer.js\")),n=require(\"../obj.js\"),o=require(\"../math.js\"),i=require(\"../dom.js\"),r=require(\"../Object.js\");function a(t){return t&&t.__esModule?t:{default:t}}var u=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),s={BLUR:\"blur\",GRADIENT:\"gradient\",RADIUS:\"radius\"},f=[\"#00f\",\"#0ff\",\"#0f0\",\"#ff0\",\"#f00\"],l=function(t){function i(e){var o=this,i=e||{},a=(0,n.assign)({},i);delete a.gradient,delete a.radius,delete a.blur,delete a.weight,(o=t.call(this,a)||this).gradient_=null,o.addEventListener((0,r.getChangeEventType)(s.GRADIENT),o.handleGradientChanged_),o.setGradient(i.gradient?i.gradient:f),o.setBlur(void 0!==i.blur?i.blur:15),o.setRadius(void 0!==i.radius?i.radius:8);var u=i.weight?i.weight:\"weight\";return o.weightFunction_=\"string\"==typeof u?function(t){return t.get(u)}:u,o.setRenderOrder(null),o}return u(i,t),i.prototype.getBlur=function(){return this.get(s.BLUR)},i.prototype.getGradient=function(){return this.get(s.GRADIENT)},i.prototype.getRadius=function(){return this.get(s.RADIUS)},i.prototype.handleGradientChanged_=function(){this.gradient_=d(this.getGradient())},i.prototype.setBlur=function(t){this.set(s.BLUR,t)},i.prototype.setGradient=function(t){this.set(s.GRADIENT,t)},i.prototype.setRadius=function(t){this.set(s.RADIUS,t)},i.prototype.createRenderer=function(){return new e.default(this,{attributes:[{name:\"weight\",callback:function(t){var e=this.weightFunction_(t);return void 0!==e?(0,o.clamp)(e,0,1):1}.bind(this)}],vertexShader:\"\\n        precision mediump float;\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform float u_size;\\n        attribute vec2 a_position;\\n        attribute float a_index;\\n        attribute float a_weight;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\\n          v_texCoord = vec2(u, v);\\n          v_weight = a_weight;\\n        }\",fragmentShader:\"\\n        precision mediump float;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\\n        }\",hitVertexShader:\"\\n        precision mediump float;\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform float u_size;\\n        attribute vec2 a_position;\\n        attribute float a_index;\\n        attribute float a_weight;\\n        attribute vec4 a_hitColor;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n        varying vec4 v_hitColor;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\\n          v_texCoord = vec2(u, v);\\n          v_hitColor = a_hitColor;\\n          v_weight = a_weight;\\n        }\",hitFragmentShader:\"\\n        precision mediump float;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n        varying vec4 v_hitColor;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\\n          if (alpha < 0.05) {\\n            discard;\\n          }\\n\\n          gl_FragColor = v_hitColor;\\n        }\",uniforms:{u_size:function(){return 2*(this.get(s.RADIUS)+this.get(s.BLUR))}.bind(this),u_blurSlope:function(){return this.get(s.RADIUS)/Math.max(1,this.get(s.BLUR))}.bind(this)},postProcesses:[{fragmentShader:\"\\n            precision mediump float;\\n\\n            uniform sampler2D u_image;\\n            uniform sampler2D u_gradientTexture;\\n\\n            varying vec2 v_texCoord;\\n\\n            void main() {\\n              vec4 color = texture2D(u_image, v_texCoord);\\n              gl_FragColor.a = color.a;\\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\\n              gl_FragColor.rgb *= gl_FragColor.a;\\n            }\",uniforms:{u_gradientTexture:function(){return this.gradient_}.bind(this)}}]})},i}(t.default);function d(t){for(var e=(0,i.createCanvasContext2D)(1,256),n=e.createLinearGradient(0,0,1,256),o=1/(t.length-1),r=0,a=t.length;r<a;++r)n.addColorStop(r*o,t[r]);return e.fillStyle=n,e.fillRect(0,0,1,256),e.canvas}var _=l;exports.default=_;"},"sourceMaps":null,"error":null,"hash":"f3c73f1771bab80e85d15a5191bccdb9","cacheData":{"env":{}}}